"""
Django settings for e_commerce project.

Generated by 'django-admin startproject' using Django 3.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
import django_heroku
import dj_database_url

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
PWA_SERVICE_WORKER_PATH = os.path.join(BASE_DIR,'hostels/static/js','serviceworker.js')


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = '*&5wh4o&@+tu#lsozahxigam@*$fi(3^@xz*6mm8ao9$rp*00@'
SECRET_KEY = os.environ.get('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['hosteltimes.herokuapp.com']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'crispy_forms',
    'hostels.apps.HostelsConfig',
    'users.apps.UsersConfig',
    'storages',
    'pwa',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
]

ROOT_URLCONF = 'e_commerce.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'e_commerce.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

DATABASES['default'] = dj_database_url.config(conn_max_age=600, ssl_require=True)

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# PWA
PWA_APP_NAME = 'Royal Home'
PWA_APP_DESCRIPTION = "RoyalHome PWA"
PWA_APP_THEME_COLOR = '#262626'
PWA_APP_BACKGROUND_COLOR = '#262626'
PWA_APP_DISPLAY = 'standalone'
PWA_APP_SCOPE = '/'
PWA_APP_ORIENTATION = 'potrait-primary'
PWA_APP_START_URL = '/'
PWA_APP_STATUS_BAR_COLOR = '#262626'
PWA_APP_ICONS = [
    {
        'src': 'hostels/static/hostels/72x72.png',
        'sizes': '72x72'
    },
    {
        'src': 'hostels/static/hostels/96x96.png',
        'sizes': '96x96'
    },
    {
        'src': 'hostels/static/hostels/128x128.png',
        'sizes': '128x128'
    },
    {
        'src': 'hostels/static/hostels/144x144.png',
        'sizes': '144x144'
    },
    {
        'src': 'hostels/static/hostels/152x152.png',
        'sizes': '152x152'
    },
    {
        'src': 'hostels/static/hostels/192x192.png',
        'sizes': '192x192'
    },
    {
        'src': 'hostels/static/hostels/384x384.png',
        'sizes': '384x384'
    },
    {
        'src': 'hostels/static/hostels/512x512.png',
        'sizes': '512x512'
    },
]
PWA_APP_ICONS_APPLE = [
    {
        'src': 'hostels/static/hostels/72x72.png',
        'sizes': '72x72'
    },
    {
        'src': 'hostels/static/hostels/96x96.png',
        'sizes': '96x96'
    },
    {
        'src': 'hostels/static/hostels/128x128.png',
        'sizes': '128x128'
    },
    {
        'src': 'hostels/static/hostels/144x144.png',
        'sizes': '144x144'
    },
    {
        'src': 'hostels/static/hostels/152x152.png',
        'sizes': '152x152'
    },
    {
        'src': 'hostels/static/hostels/192x192.png',
        'sizes': '192x192'
    },
    {
        'src': 'hostels/static/hostels/384x384.png',
        'sizes': '384x384'
    },
    {
        'src': 'hostels/static/hostels/512x512.png',
        'sizes': '512x512'
    },
]
PWA_APP_SPLASH_SCREEN = [
    {
        'src': 'hostels/static/hostels/384x384.png',
        'media': '(device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2)'
    }
]
PWA_APP_DIR = 'ltr'
PWA_APP_LANG = 'en-US'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
MEDIA_URL = '/uploads/'
MEDIA_ROOT = os.path.join(BASE_DIR,'uploads')

CRISPY_TEMPLATE_PACK = 'bootstrap4'

LOGIN_REDIRECT_URL = '/'
LOGIN_URL = 'login'

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST =  os.environ.get('EMAIL_HOST')
EMAIL_PORT = 587
EMAIL_USE_TLS = True 
EMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD')

AWS_ACCESS_KEY_ID = os.environ.get('AWS_ACCESS_KEY_ID')
AWS_SECRET_ACCESS_KEY = os.environ.get('AWS_SECRET_ACCESS_KEY')
AWS_STORAGE_BUCKET_NAME = os.environ.get('AWS_STORAGE_BUCKET_NAME')

AWS_S3_FILE_OVERWRITE = False
AWS_DEFAULT_ACL = None
AWS_QUERYSTRING_AUTH = False

DEFAULT_FILE_STORAGE = "storages.backends.s3boto3.S3Boto3Storage"

django_heroku.settings(locals())